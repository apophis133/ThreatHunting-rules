rule Rust_for_Malware_Development
{
    meta:
        description = "Detection patterns for the tool 'Rust-for-Malware-Development' taken from the ThreatHunting-Keywords github project" 
        author = "@mthcht"
        reference = "https://github.com/mthcht/ThreatHunting-Keywords"
        tool = "Rust-for-Malware-Development"
        rule_category = "offensive_tool_keyword"

    strings:
        // Description: malware development using Rust
        // Reference: https://github.com/Whitecat18/Rust-for-Malware-Development
        $string1 = /\s\-\-var\-name\=Smukx\s/ nocase ascii wide
        // Description: malware development using Rust
        // Reference: https://github.com/Whitecat18/Rust-for-Malware-Development
        $string2 = /\"Custom\sDLL\'s\sare\sfking\sawesome\s\!\"/ nocase ascii wide
        // Description: malware development using Rust
        // Reference: https://github.com/Whitecat18/Rust-for-Malware-Development
        $string3 = /\"DLL\'s\sare\sawesome\s\!\sEspecially\sExec\sin\sRust\"/ nocase ascii wide
        // Description: malware development using Rust
        // Reference: https://github.com/Whitecat18/Rust-for-Malware-Development
        $string4 = /\"Malware\sresources\sneeds\sto\sbe\sfree\sand\swide\"/ nocase ascii wide
        // Description: malware development using Rust
        // Reference: https://github.com/Whitecat18/Rust-for-Malware-Development
        $string5 = /\"My\smoto\sis\sto\sleave\smalware\sresources\sfor\sfree\s/ nocase ascii wide
        // Description: malware development using Rust
        // Reference: https://github.com/Whitecat18/Rust-for-Malware-Development
        $string6 = /\/dll_inject\.exe/ nocase ascii wide
        // Description: malware development using Rust
        // Reference: https://github.com/Whitecat18/Rust-for-Malware-Development
        $string7 = /\/Rust\-for\-Malware\-Development\.git/ nocase ascii wide
        // Description: malware development using Rust
        // Reference: https://github.com/Whitecat18/Rust-for-Malware-Development
        $string8 = /\[\+\]\sEncrypted\sShellcode\:\s/ nocase ascii wide
        // Description: malware development using Rust
        // Reference: https://github.com/Whitecat18/Rust-for-Malware-Development
        $string9 = /\[\+\]\sRemote\sCode\sExecuted\sSuccessfully\s\!/ nocase ascii wide
        // Description: malware development using Rust
        // Reference: https://github.com/Whitecat18/Rust-for-Malware-Development
        $string10 = /\\amsi_bypass\.rs/ nocase ascii wide
        // Description: malware development using Rust
        // Reference: https://github.com/Whitecat18/Rust-for-Malware-Development
        $string11 = /\\dll_inject\.exe/ nocase ascii wide
        // Description: malware development using Rust
        // Reference: https://github.com/Whitecat18/Rust-for-Malware-Development
        $string12 = /\\keycap\.log/ nocase ascii wide
        // Description: malware development using Rust
        // Reference: https://github.com/Whitecat18/Rust-for-Malware-Development
        $string13 = /\\keylog_tcp\.txt/ nocase ascii wide
        // Description: malware development using Rust
        // Reference: https://github.com/Whitecat18/Rust-for-Malware-Development
        $string14 = /\\keylogger\\src\\main\.rs/ nocase ascii wide
        // Description: malware development using Rust
        // Reference: https://github.com/Whitecat18/Rust-for-Malware-Development
        $string15 = /\\tcp_keylogger\.rs/ nocase ascii wide
        // Description: malware development using Rust
        // Reference: https://github.com/Whitecat18/Rust-for-Malware-Development
        $string16 = /48039def2e245f13ff409707a8b0018a402c58ec413ff81f947339203a615057/ nocase ascii wide
        // Description: malware development using Rust
        // Reference: https://github.com/Whitecat18/Rust-for-Malware-Development
        $string17 = /DLL\sINJECTION\sEXECUTED\sSUCCESSFULLY\s\:D/ nocase ascii wide
        // Description: malware development using Rust
        // Reference: https://github.com/Whitecat18/Rust-for-Malware-Development
        $string18 = /dll_inject\.exe\s/ nocase ascii wide
        // Description: malware development using Rust
        // Reference: https://github.com/Whitecat18/Rust-for-Malware-Development
        $string19 = /f87f4efe743195b9995c713d8219ee7b495691262a16a200b49ae65f29eecec6/ nocase ascii wide
        // Description: malware development using Rust
        // Reference: https://github.com/Whitecat18/Rust-for-Malware-Development
        $string20 = /fd47e488528dfd7d415d1acf06332b12f2d40702328a467ef5d04c4c0a892fe6/ nocase ascii wide
        // Description: malware development using Rust
        // Reference: https://github.com/Whitecat18/Rust-for-Malware-Development
        $string21 = /filename\s\=\s\"keycap\.log\"/ nocase ascii wide
        // Description: malware development using Rust
        // Reference: https://github.com/Whitecat18/Rust-for-Malware-Development
        $string22 = /http\:\/\/127\.0\.0\.1\:8080\/shellcode\.bin/ nocase ascii wide
        // Description: malware development using Rust
        // Reference: https://github.com/Whitecat18/Rust-for-Malware-Development
        $string23 = /Keylogger\sstarted/ nocase ascii wide
        // Description: malware development using Rust
        // Reference: https://github.com/Whitecat18/Rust-for-Malware-Development
        $string24 = /msfshellcode_payload\.bin/ nocase ascii wide
        // Description: malware development using Rust
        // Reference: https://github.com/Whitecat18/Rust-for-Malware-Development
        $string25 = /Rc4\:\:new\(b\"This\sis\snerdy\s\.\.\sim\sthe\skey\s\:\)\"/ nocase ascii wide
        // Description: malware development using Rust
        // Reference: https://github.com/Whitecat18/Rust-for-Malware-Development
        $string26 = /secrect_key\s\=\s\"iamafuckingnerd\"/ nocase ascii wide
        // Description: malware development using Rust
        // Reference: https://github.com/Whitecat18/Rust-for-Malware-Development
        $string27 = /Whitecat18\/Rust\-for\-Malware\-Development/ nocase ascii wide

    condition:
        any of them
}
